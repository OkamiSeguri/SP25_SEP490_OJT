// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250219095430_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.CohortCurriculum", b =>
                {
                    b.Property<string>("Cohort")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("Cohort", "CurriculumId");

                    b.HasIndex("CurriculumId");

                    b.ToTable("CohortCurriculums");
                });

            modelBuilder.Entity("BusinessObject.Curriculum", b =>
                {
                    b.Property<int>("CurriculumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurriculumId"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurriculumId");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("BusinessObject.Enterprise", b =>
                {
                    b.Property<int>("EnterpriseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnterpriseId"));

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnterpriseId");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("BusinessObject.OJTFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GivenBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OJTId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("OJTId");

                    b.ToTable("OJTFeedbacks");
                });

            modelBuilder.Entity("BusinessObject.OJTProgram", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProgramId");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("OJTPrograms");
                });

            modelBuilder.Entity("BusinessObject.OJTRegistration", b =>
                {
                    b.Property<int>("OJTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OJTId"));

                    b.Property<int>("EnterpriseId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OJTId");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("OJTRegistrations");
                });

            modelBuilder.Entity("BusinessObject.OJTResult", b =>
                {
                    b.Property<int>("OJTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OJTId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OJTRegistrationOJTId")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OJTId");

                    b.HasIndex("OJTRegistrationOJTId");

                    b.ToTable("OJTResults");
                });

            modelBuilder.Entity("BusinessObject.StudentGrade", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CurriculumId")
                        .HasColumnType("int");

                    b.Property<decimal>("Grade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPassed")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("CASE WHEN Grade >= 5.0 THEN 1 ELSE 0 END");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CurriculumId");

                    b.HasIndex("CurriculumId");

                    b.ToTable("StudentGrades");
                });

            modelBuilder.Entity("BusinessObject.StudentProfile", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Cohort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtCredits")
                        .HasColumnType("int");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCredits")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.ToTable("StudentProfiles");
                });

            modelBuilder.Entity("BusinessObject.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BusinessObject.CohortCurriculum", b =>
                {
                    b.HasOne("BusinessObject.Curriculum", "Curriculum")
                        .WithMany()
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");
                });

            modelBuilder.Entity("BusinessObject.OJTFeedback", b =>
                {
                    b.HasOne("BusinessObject.OJTRegistration", "OJTRegistration")
                        .WithMany("OJTFeedbacks")
                        .HasForeignKey("OJTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OJTRegistration");
                });

            modelBuilder.Entity("BusinessObject.OJTProgram", b =>
                {
                    b.HasOne("BusinessObject.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("BusinessObject.OJTRegistration", b =>
                {
                    b.HasOne("BusinessObject.Enterprise", "Enterprise")
                        .WithMany("OJTRegistrations")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusinessObject.OJTProgram", "OJTProgram")
                        .WithMany("OJTRegistrations")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusinessObject.User", "User")
                        .WithMany("OJTRegistration")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("OJTProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObject.OJTResult", b =>
                {
                    b.HasOne("BusinessObject.OJTRegistration", "OJTRegistration")
                        .WithMany("OJTResults")
                        .HasForeignKey("OJTRegistrationOJTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OJTRegistration");
                });

            modelBuilder.Entity("BusinessObject.StudentGrade", b =>
                {
                    b.HasOne("BusinessObject.Curriculum", "Curriculum")
                        .WithMany()
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObject.StudentProfile", b =>
                {
                    b.HasOne("BusinessObject.User", "User")
                        .WithOne()
                        .HasForeignKey("BusinessObject.StudentProfile", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObject.Enterprise", b =>
                {
                    b.Navigation("OJTRegistrations");
                });

            modelBuilder.Entity("BusinessObject.OJTProgram", b =>
                {
                    b.Navigation("OJTRegistrations");
                });

            modelBuilder.Entity("BusinessObject.OJTRegistration", b =>
                {
                    b.Navigation("OJTFeedbacks");

                    b.Navigation("OJTResults");
                });

            modelBuilder.Entity("BusinessObject.User", b =>
                {
                    b.Navigation("OJTRegistration");
                });
#pragma warning restore 612, 618
        }
    }
}
